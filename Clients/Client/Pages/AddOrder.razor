@page "/addorder"
@using NotatnikMechanika.Shared.Models.Customer;
@using NotatnikMechanika.Shared.Models.Car;
@inherits PageBase<AddOrderPageModel>


@if (PageModel.IsLoading)
{
    <MBCircularProgress class="circular-progress" CircularProgressType="@MBCircularProgressType.Indeterminate" />
}
else
{

    <div class="mdc-layout-grid__cell">
        <MBCard AutoStyled="true">
            <Primary>
                <EditForm Model="PageModel.Model" OnValidSubmit="_ => PageModel.AddCommand.Execute(null)">
                    <DataAnnotationsValidator />
                    <p><MBSelect 
                            Label="Klient" 
                            @bind-Value="PageModel.SelectedCustomer" 
                            Items="Customers"
                            Disabled="@(!PageModel.Customers.Any())"
                            SelectInputStyle="MBSelectInputStyle.Outlined" 
                            ItemValidation="@MBItemValidation.NoSelection"
                            TextAlignStyle ="MBTextAlignStyle.Center"/></p>
                    <p>
                        @if(PageModel.CarsLoading)
                        {
                             <MBCircularProgress CircularProgressType="@MBCircularProgressType.Indeterminate" />
                        }
                        else
                        {
                            <p><MBSelect Label="Samochód" 
                                    @bind-Value="PageModel.SelectedCar" 
                                    Items="Cars" 
                                    Disabled="@(!PageModel.Cars.Any())"
                                    SelectInputStyle="MBSelectInputStyle.Outlined" 
                                    ItemValidation="@MBItemValidation.NoSelection" /></p>
                        }  
                    </p>

                    <p><MBDatePicker Label="Data przyjęcia"
                                    @bind-Value="PageModel.Model.AcceptDate"
                                    SelectInputStyle="MBSelectInputStyle.Outlined" /></p>

                    <p><MBDatePicker Label="Data zakończenia"
                                    @bind-Value="PageModel.Model.FinishDate"
                                    SelectInputStyle="MBSelectInputStyle.Outlined" /></p>

                    <p><MBTextField @bind-Value="@PageModel.Model.Details" 
                                    Label="Dane dodatkowe" 
                                    TextInputStyle="MBTextInputStyle.Outlined" 
                                    ValidationMessageFor="@(() => PageModel.Model.Details)"/></p>
                    
                    <MBButton ButtonStyle="@MBButtonStyle.ContainedRaised" Label="Dodaj zlecenie" Type="Submit" />
                </EditForm>
            </Primary>
        </MBCard>
    </div>    

    <div class="mdc-layout-grid__cell">
        <MBCard AutoStyled="true">
            <Primary>
                
                @if (PageModel.Services.Any())
                {
                    <MBList Items="@PageModel.Services"
                            Context="service"
                            ShowSeparators="true"
                            ListStyle="MBListStyle.Outlined">

                        <Icon><MBIcon IconName="local_grocery_store" /></Icon>
                        <Title>@service.Name</Title>
                        <LineTwo>@service.Price</LineTwo>
                        <Actions>
                            <div style="width: 10rem">
                                    <MBCheckbox @bind-Value="@service.Finished"/>
                            </div>
                        </Actions>
                    </MBList>
                }
                else
                {
                    <p>Lista usług jest pusta</p>
                }
            </Primary>
        </MBCard>
    </div>  

    <div class="mdc-layout-grid__cell">
        <MBCard AutoStyled="true">
            <Primary>           
                @if (PageModel.Commodities.Any())
                {
                    <MBList Items="@PageModel.Commodities"
                            Context="commodity"
                            ShowSeparators="true"
                            ListStyle="MBListStyle.Outlined">

                        <Icon><MBIcon IconName="local_grocery_store" /></Icon>
                        <Title>@commodity.Name</Title>
                        <LineTwo>@commodity.Price</LineTwo>
                        <Actions>
                            <div style="width: 10rem">
                                <MBCheckbox @bind-Value="@commodity.Finished"/>
                            </div>
                        </Actions>
                    </MBList>
                }
                else
                {
                    <p>Lista towarów jest pusta</p>
                }
            </Primary>
        </MBCard>
    </div>  
}

@code{

    IEnumerable<MBSelectElement<CustomerModel>> Customers {
        get => PageModel.Customers.Select(c => new MBSelectElement<CustomerModel> { Label = $"{c.Name} {c.Surname}", SelectedValue = c });      
    }

    IEnumerable<MBSelectElement<CarModel>> Cars {
        get {
            return  PageModel.Cars.Any() ?
            PageModel.Cars.Select(c => new MBSelectElement<CarModel> { Label = $"{c.Brand} {c.Model}", SelectedValue = c }) :
            new List<MBSelectElement<CarModel>> { new MBSelectElement<CarModel> { Label = "Brak samochodów", SelectedValue = new CarModel() } };
        }
    }
}
